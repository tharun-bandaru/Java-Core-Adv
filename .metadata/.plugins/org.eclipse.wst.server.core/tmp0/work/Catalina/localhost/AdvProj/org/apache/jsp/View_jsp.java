/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2023-01-28 13:18:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import com.tcs.servlet.UserDao;

public final class View_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.tcs.servlet.UserDao");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<HTML>\r\n");
      out.write("      \r\n");
      out.write("       <HEAD>\r\n");
      out.write("       <TITLE>*******ALL USERS*******</TITLE>\r\n");
      out.write("        </HEAD>\r\n");
      out.write("       <BODY bgcolor=\"cyan\" >\r\n");
      out.write("        <style>\r\n");
      out.write("       TABLE{\r\n");
      out.write("       border: 1px solid;\r\n");
      out.write("       border-collapse: collapse;\r\n");
      out.write("        width: 100%;\r\n");
      out.write("         text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("        th, td {\r\n");
      out.write("  		border-bottom: 1px solid #ddd;\r\n");
      out.write("  		font-size: 25px\r\n");
      out.write("		}\r\n");
      out.write("		tr:hover {background-color: coral;}	\r\n");
      out.write("	</style>\r\n");
      out.write("       <font color=\"red\"><center><H1>*****ALL USERS***** </H1></center></font>\r\n");
      out.write("       ");

       	ResultSet resultset=UserDao.allUsers();
		
       
      out.write("\r\n");
      out.write("      <TABLE BORDER=\"1\">\r\n");
      out.write("      <TR>\r\n");
      out.write("      <TH>User Name</TH>\r\n");
      out.write("      <TH>User Password</TH>\r\n");
      out.write("      <TH>Qualification</TH>\r\n");
      out.write("      <TH>Gender</TH>\r\n");
      out.write("      <TH>Technologies</TH>\r\n");
      out.write("      <TH>Country Name</TH>\r\n");
      out.write("      <TH>Address</TH>\r\n");
      out.write("      <TH>Comments</TH>\r\n");
      out.write("      \r\n");
      out.write("      </TR>\r\n");
      out.write("      ");
 while(resultset.next()){ 
      out.write("\r\n");
      out.write("      <TR>\r\n");
      out.write("       <TD> ");
      out.print( resultset.getString(1) );
      out.write("</td>\r\n");
      out.write("       <TD> ");
      out.print( resultset.getString(2) );
      out.write("</TD>\r\n");
      out.write("       <TD> ");
      out.print( resultset.getString(3) );
      out.write("</TD>\r\n");
      out.write("       <TD> ");
      out.print( resultset.getString(4) );
      out.write("</TD>\r\n");
      out.write("       <TD> ");
      out.print( resultset.getString(5) );
      out.write("</TD>\r\n");
      out.write("       <TD> ");
      out.print( resultset.getString(6) );
      out.write("</TD>\r\n");
      out.write("       <TD> ");
      out.print( resultset.getString(7) );
      out.write("</TD>\r\n");
      out.write("       <TD> ");
      out.print( resultset.getString(8) );
      out.write("</TD>\r\n");
      out.write("	\r\n");
      out.write("      </TR>\r\n");
      out.write("      ");
 } 
      out.write("\r\n");
      out.write("     </TABLE>\r\n");
      out.write("     </BODY>\r\n");
      out.write("</HTML>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
